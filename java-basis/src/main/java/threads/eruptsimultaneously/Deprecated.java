package threads.eruptsimultaneously;import java.text.DateFormat;import java.text.SimpleDateFormat;import java.util.Date;import java.util.concurrent.TimeUnit;/** * suspend resume stop 测试线程暂停、恢复、停止工作 * 这些api过期了，不建议使用 */public class Deprecated {    public static void main(String[] args) throws InterruptedException {        DateFormat format = new SimpleDateFormat("HH:mm:ss");        Thread printThread = new Thread(new Runner(), "printThread");        printThread.start();        TimeUnit.SECONDS.sleep(3);        // 将printthread进行暂停，输出内容工资停止        printThread.suspend();        System.out.println("main suspend print tread at " + format.format(new Date()));        TimeUnit.SECONDS.sleep(3);        //将printthread进行恢复，输出内容继续        printThread.resume();        System.out.println("main resume printtread at " + format.format(new Date()));        TimeUnit.SECONDS.sleep(3);        // 将printthread进行终止，输出内容停止        printThread.stop();        System.out.println("main stop print thread at " + format.format(new Date()));        TimeUnit.SECONDS.sleep(3);    }    static class Runner implements Runnable {        @Override        public void run() {            DateFormat format = new SimpleDateFormat("HH:mm:ss");            while (true) {                System.out.println(Thread.currentThread().getName() + " Run at " + format.format(new Date()));                ThreadStatus.SleepUtils.second(1);            }        }    }    public synchronized Object get(long mills) throws InterruptedException {        Object result = null;        long future = System.currentTimeMillis();        long remaining = mills;        while ((result == null) && remaining > 0) {            wait(remaining);            remaining = future - System.currentTimeMillis();        }        return result;    }}