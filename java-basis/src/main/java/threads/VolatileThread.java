package threads;public class VolatileThread {    static class PrintString implements Runnable{        private volatile boolean isContinuePrint = true;        public boolean isContinuePrint() {            return isContinuePrint;        }        public void setContinuePrint(boolean isContinuePrint) {            this.isContinuePrint = isContinuePrint;        }        public void printStringMethod() {            try {                while (isContinuePrint == true) {                    System.out.println("run print string method threadName=" + Thread.currentThread().getName());                    Thread.sleep(1000);                }            } catch (InterruptedException e) {                e.printStackTrace();            }        }        @Override        public void run() {            printStringMethod();        }    }    public static void main(String[] args) {//        PrintString printString = new PrintString();//        printString.printStringMethod();        PrintString printString = new PrintString();        Thread t = new Thread(printString);        t.start();        System.out.println("I want stop! stop thread=" + Thread.currentThread().getName());        printString.setContinuePrint(false);    }}