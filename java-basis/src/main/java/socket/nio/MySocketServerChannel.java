package socket.nio;import java.io.IOException;import java.net.InetSocketAddress;import java.nio.ByteBuffer;import java.nio.channels.SelectionKey;import java.nio.channels.Selector;import java.nio.channels.ServerSocketChannel;import java.nio.channels.SocketChannel;public class MySocketServerChannel {    private final static String GREETING = "Hello I must be going.\r\n";    public static void main(String[] args) throws IOException {        ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();        ByteBuffer buffer = ByteBuffer.wrap(GREETING.getBytes());        serverSocketChannel.socket().bind(new InetSocketAddress(12345));//        ServerSocket serverSocket = serverSocketChannel.socket();//        serverSocket.bind(new InetSocketAddress(12343));        Selector selector = Selector.open();//        SelectionKey selectionKey =  serverSocketChannel.register(selector, SelectionKey.OP_READ,Object);        SelectionKey selectionKey =  serverSocketChannel.register(selector, SelectionKey.OP_READ);        selectionKey.attach(new Object());        selector.select(1000);        serverSocketChannel.configureBlocking(true); //是否开启阻塞模式        while (true) {            SocketChannel socketChannel = serverSocketChannel.accept();            if (socketChannel != null) {                buffer.rewind();                socketChannel.write(buffer);                socketChannel.close();            } else {                try {                    Thread.sleep(2000);                } catch (InterruptedException e) {                    e.printStackTrace();                }            }        }    }}