package socket.nio;import lombok.extern.slf4j.Slf4j;import java.io.*;import java.nio.ByteBuffer;import java.nio.channels.FileChannel;@Slf4jpublic class MyFileChannel {    public static void main(String[] args) throws IOException, InterruptedException {        RandomAccessFile file = new RandomAccessFile("user.data", "rw");//        file.write("aaaaaaaaaaaaaaa".getBytes("UTF-8"));        FileChannel fileChannel = file.getChannel();        ByteBuffer byteBuffer = ByteBuffer.allocate(16 * 1024);//        fileChannel.lock(20, 30, true);//        while (fileChannel.read(byteBuffer) != -1) {//            byteBuffer.flip();//            log.info("数组：{}", new String(byteBuffer.array()));//            byteBuffer.clear();//        }        for (int i = 0; i < Integer.MAX_VALUE / 10000; i++) {            byteBuffer.put("a".getBytes("UTF-8"));            byteBuffer.flip();            fileChannel.write(byteBuffer);            byteBuffer.compact();            Thread.sleep(0, 50);        }//        byteBuffer.put("a");//        fileChannel.write(byteBuffer, 0, 1000);        file.close();    }}